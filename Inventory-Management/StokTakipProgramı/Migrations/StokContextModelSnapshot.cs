// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StokTakipProgramı.Repository.Concrete.EntityFramework;

namespace StokTakipProgramı.Migrations
{
    [DbContext(typeof(StokContext))]
    partial class StokContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StokTakipProgramı.Entity.Alis", b =>
                {
                    b.Property<int>("AlisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ABirimFiyat")
                        .HasColumnType("float");

                    b.Property<string>("AStokAdı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AStokKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AToplamFiyat")
                        .HasColumnType("float");

                    b.Property<int>("AlisMiktarı")
                        .HasColumnType("int");

                    b.Property<DateTime>("AlisTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("AlisId");

                    b.ToTable("Alislar");
                });

            modelBuilder.Entity("StokTakipProgramı.Entity.Depo", b =>
                {
                    b.Property<int>("DepoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepoAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepoAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepoAdres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepoKodu")
                        .HasColumnType("int");

                    b.HasKey("DepoId");

                    b.ToTable("Depolar");
                });

            modelBuilder.Entity("StokTakipProgramı.Entity.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductAdet")
                        .HasColumnType("int");

                    b.Property<int>("StokKartId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("DepoId");

                    b.HasIndex("StokKartId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("StokTakipProgramı.Entity.Satis", b =>
                {
                    b.Property<int>("SatisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("SBirimFiyat")
                        .HasColumnType("float");

                    b.Property<string>("SStokAdı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SStokKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SToplamFiyat")
                        .HasColumnType("float");

                    b.Property<int>("SatisMiktarı")
                        .HasColumnType("int");

                    b.Property<DateTime>("SatisTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("SatisId");

                    b.ToTable("Satislar");
                });

            modelBuilder.Entity("StokTakipProgramı.Entity.StokKart", b =>
                {
                    b.Property<int>("StokKartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StokAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StokAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("StokAlis")
                        .HasColumnType("float");

                    b.Property<string>("StokBirim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StokKodu")
                        .HasColumnType("int");

                    b.Property<double>("StokSatis")
                        .HasColumnType("float");

                    b.HasKey("StokKartId");

                    b.ToTable("StokKartları");
                });

            modelBuilder.Entity("StokTakipProgramı.Entity.Transfer", b =>
                {
                    b.Property<int>("TransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EskiDepo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TStokAdı")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TStokKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransferMiktarı")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransferTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("YeniDepo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransferId");

                    b.ToTable("Transferler");
                });

            modelBuilder.Entity("StokTakipProgramı.Entity.Product", b =>
                {
                    b.HasOne("StokTakipProgramı.Entity.Depo", "Depo")
                        .WithMany("Products")
                        .HasForeignKey("DepoId");

                    b.HasOne("StokTakipProgramı.Entity.StokKart", "StokKart")
                        .WithMany("Products")
                        .HasForeignKey("StokKartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Depo");

                    b.Navigation("StokKart");
                });

            modelBuilder.Entity("StokTakipProgramı.Entity.Depo", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("StokTakipProgramı.Entity.StokKart", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
